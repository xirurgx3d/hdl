{"version":3,"sources":["api/Fabrick.ts","api/Api.ts","api/Api_user.ts","components/loader.tsx","store/UserStore.ts","styled/material_styles.ts","components/auth/login.tsx","components/auth/register.tsx","routes/Auth.tsx","hooks/useProductStore.ts","redux/reducers/reducerProduct/constants.ts","redux/reducers/reducerProduct/action.ts","components/catalog/toolsbar/Pagination.tsx","constants/constRouter.ts","hooks/usePrepareLink.ts","components/catalog/product/ProductListItems.tsx","components/catalog/product/ProdList.tsx","components/catalog/category/CateProdList.tsx","components/catalog/toolsbar/SerchProd.tsx","reducers/reducerProduct/constants.ts","components/catalog/toolsbar/SortProduct.tsx","reducers/reducerProduct/action.ts","views/catalog/ToolbarTpl.tsx","components/modals/Dialogs.tsx","hooks/usePoPUPchild.ts","components/catalog/product/ProdForm.tsx","views/catalog/main.tsx","components/catalog/category/CateList.tsx","components/catalog/category/CateForm.tsx","views/catalog/CategoryTpl.tsx","routes/Catalog.tsx","components/header.tsx","components/Drawers.tsx","components/Dashboard.tsx","routes/Router.tsx","App/App.tsx","redux/reducers/reducerProduct/reducer.ts","redux/reducers/reducerErrors/action.ts","redux/reducers/reducerErrors/reducer.ts","redux/reducers/rootReducer.ts","utils/utilite.ts","redux/reducers/reducerProduct/sagaHandlProd.ts","redux/reducers/reducerProduct/sagaProd.ts","redux/sagas/sagas.ts","redux/store.ts","index.tsx"],"names":["CatalogFabr","id","this","component","getItem","data","getList","catalogHandle","CatalogDelet","request","Component","Category","method","url","console","log","Product","Api","URL","api","Axios","create","baseURL","_instanse","getApi","cat","register","login","headers","auth","token","categorylist","fabrick","categoryHandle","categoryDelet","productlist","ProductCategoryList","ProdHandle","producDelet","getInstance","checkUser","a","localStorage","error","Loader","Grid","container","direction","justify","alignItems","CircularProgress","_isAuth","_user","makeAutoObservable","bool","user","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","userTitle","fontSize","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","formControl","margin","minWidth","selectEmpty","marginTop","setingButt","frontSize","toolbars","backgroundColor","marginBottom","boxShadow","prodHandbutt","prodTitle","handleboxe","prodImgbox","prodAddbutt","Login","useState","errorse","setErore","useForm","handleSubmit","history","watch","errors","useHistory","onSubmit","email","password","aut","window","btoa","then","res","setItem","UserStore","setIsAuth","push","catch","response","status","msg","item","xs","Paper","className","type","name","placeholder","ref","required","pattern","minLength","maxLength","value","Register","watchRole","Auth","match","path","state","selector","udispatch","useDispatch","useSelector","dispatch","useCallback","action","getProdListRequest","ActionConst","productHandl","pagination","memo","useProductStore","style","Pagination","onChange","event","num","params","page","payload","count","size","popRouteEnv","RouteEnv","pathname","to","location","useLocation","useRouteMatch","concat","back","goBack","classes","usePrepareLink","map","val","index","TableRow","key","_id","TableCell","img","src","process","Typography","variant","Button","color","onClick","price","selectore","createSelector","productData","isFetching","spiner","coutns","useEffect","Table","TableHead","TableBody","cateList","setCateList","List","ListItem","button","ListItemText","primary","serch","TextField","e","target","defaultValue","label","sort","toValue","obj","JSON","stringify","FormControl","InputLabel","Select","labelId","parse","MenuItem","FormHelperText","ToolbarTpl","Dialogs","children","setRend","childrenWithProps","useMemo","React","Children","child","query","URLSearchParams","search","queryProp","forEach","Object","assign","isValidElement","cloneElement","usePoPUPchild","render","Dialog","onClose","open","Boolean","ProdForm","stateProd","setProd","filee","setfile","category","setCategory","massege","setMassege","timer","setTimeout","clearTimeout","formData","FormData","append","String","priceOld","descript","recomend","Date","now","Alert","severity","encType","files","selected","CatMain","fixedHeightPaper","clsx","Container","maxWidth","md","lg","gutterBottom","CateProdList","rend","setstate","setCat","reqCategory","deletHadle","ListItemIcon","CateForm","stateCate","setCate","CategoryTpl","setRender","Catalog","Main","Header","setUser","jwt_decode","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","Avatar","removeItem","Drawers","Drawer","Divider","Dashboard","Router","observer","loading","setLoading","finally","CssBaseline","initialStateProd","limit","initialStateProdListData","SetState","ActionConstErrors","ProdListError","meta","initialStateErrors","combineReducers","setSate","stateMutait","selects","ProdListHandlSaga","ProdListSortSaga","ProdListSerchSaga","ProdListPaginationSaga","ProdListCategorySaga","select","optione","call","selectState","option","fetcher","fetcherBody","ProdListFetch","ProdListRequestSaga","ProdListDeletSaga","watchProdListRequestSaga","watchProdListRequestHandlSaga","put","fork","delay","takeEvery","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","composeWithDevTools","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.84f43ca7.chunk.js","sourcesContent":["import Axios, { AxiosInstance, AxiosPromise } from \"axios\";\r\n\r\nabstract class Fabrick{\r\n  request: AxiosInstance\r\n  component:any\r\n  constructor(request:AxiosInstance) {\r\n    this.request = request\r\n  }\r\n  fabrick(Component:any) {\r\n    this.component = new Component(this.request)\r\n  }\r\n}\r\n\r\n\r\n\r\nexport interface ICatalog{\r\n  getList: <T>(id?:T) => AxiosPromise,\r\n  catalogHandle: <T, K>(data: T, id?: K) => AxiosPromise,\r\n  CatalogDelet: <T>(id:T) => AxiosPromise\r\n}\r\nclass CatalogFabr extends Fabrick implements ICatalog {\r\n  getItem<T>(id:T) {\r\n    return this.component.getItem(id)\r\n  }\r\n  getList<T>(id?: T,data?:any){\r\n    return this.component.getList(id,data)\r\n  }\r\n  catalogHandle<T,K>(data:T,id?:K) {\r\n    return this.component.catalogHandle(data,id)\r\n  }\r\n  CatalogDelet<T>(id:T) {\r\n    return this.component.CatalogDelet(id)\r\n  }\r\n}\r\n\r\nclass Category implements ICatalog {\r\n  request: AxiosInstance\r\n  constructor(request: AxiosInstance) {\r\n    this.request = request\r\n  }\r\n  getList<T>(id?: T) {\r\n    return id\r\n      ? this.request({\r\n        method: 'get',\r\n        url: '/catalog/category/list/' + id,\r\n      })\r\n      : this.request({\r\n        method: 'get',\r\n        url: '/catalog/category/list',\r\n      })\r\n  }\r\n  catalogHandle<T, K>(data: T, id?: K) {\r\n    return id\r\n      ? this.request({\r\n        method: 'post',\r\n        url: '/catalog/category/edit/' + id,\r\n        data: data\r\n      })\r\n      : this.request({\r\n        method: 'post',\r\n        url: '/catalog/category/add',\r\n        data: data\r\n      })\r\n  }\r\n  CatalogDelet<T>(id: T) {\r\n    console.log(id)\r\n    return this.request({\r\n      method: 'delete',\r\n      url: '/catalog/category/delet/' + id,\r\n    })\r\n  }\r\n}\r\nclass Product{\r\n  request: AxiosInstance\r\n  constructor(request:AxiosInstance) {\r\n    this.request = request\r\n  }\r\n  getItem<T>(id:T) {\r\n    return this.request({\r\n      method: 'get',\r\n      url: '/catalog/product/list/' + id,\r\n    })\r\n  }\r\n  getList<T>(data:T) {\r\n    return this.request({\r\n      method: 'post',\r\n      url: '/catalog/product/list',\r\n      data:data\r\n    })\r\n  }\r\n  catalogHandle<T, K>(data: T, id?: K) {\r\n    return id\r\n      ? this.request({\r\n        method: 'put',\r\n        url: '/catalog/product/edit/' + id,\r\n        data: data\r\n      })\r\n      : this.request({\r\n        method: 'post',\r\n        url: '/catalog/product/add',\r\n        data: data\r\n      })\r\n  }\r\n  CatalogDelet<T>(id: T) {\r\n    return this.request({\r\n      method: 'delete',\r\n      url: '/catalog/product/delet/' + id,\r\n    })\r\n  }\r\n}\r\n\r\nexport {CatalogFabr,Category,Product}","import Axios, { AxiosInstance, AxiosPromise } from \"axios\";\r\nimport { TinitialStateProd } from \"../redux/reducers/reducerProduct/reducer\";\r\n\r\nimport { CatalogFabr, Category, Product } from \"./Fabrick\";\r\n\r\n\r\n //singleton\r\n class Api{\r\n  static _instanse:null | object = null\r\n  private URL:string = 'http://192.168.99.100/api'\r\n  api:AxiosInstance\r\n\r\n   constructor(){\r\n    this.api = Axios.create({\r\n      baseURL: this.URL,\r\n      })\r\n   }\r\n   static get getInstance(){\r\n      if(!Api._instanse){\r\n        Api._instanse = new Api()\r\n      }\r\n      return Api._instanse\r\n    }\r\n }\r\n\r\n interface Iback {\r\n    register:<T>(data:T) => AxiosPromise,\r\n    login: <T>(data: T) => AxiosPromise,\r\n    auth: <T>(data: T) => AxiosPromise,\r\n    categorylist: <T>(id?:T) => AxiosPromise,\r\n    categoryHandle: <T, K>(data: T, id?: K) => AxiosPromise,\r\n    categoryDelet: <T>(id: T) => AxiosPromise,\r\n    Product: (id: string) => AxiosPromise,\r\n    ProductCategoryList: (data: any) => AxiosPromise,\r\n    productlist:(data:any) => AxiosPromise,\r\n    ProdHandle: <T, K>(data: T, id?: K) => AxiosPromise,\r\n    producDelet: <T>(id?:T) => AxiosPromise,\r\n}\r\n \r\n\r\n\r\n\r\n\r\n function getApi({api}:any):Iback{\r\n    const request: AxiosInstance = api\r\n    const cat = new CatalogFabr(request)\r\n    return {\r\n      register<T>(data:T) {\r\n        return request({\r\n          method: 'post',\r\n          url: '/auth/reg',\r\n          data: data\r\n        })\r\n      },\r\n      login<T>(data:T) {\r\n        return request({\r\n          method: 'post',\r\n          url: '/auth/login',\r\n          headers: { 'authorization': 'Basic ' + data }\r\n        })\r\n      },\r\n      auth<T>(token:T) {\r\n        return request({\r\n          method: 'post',\r\n          url: '/auth/auth',\r\n          headers: { 'Authorization': 'Bearer ' + token }\r\n        })\r\n      },\r\n      categorylist<T>(id?:T) {\r\n        cat.fabrick(Category)\r\n        return cat.getList(id)\r\n      },\r\n      categoryHandle<T, K>(data: T, id?: K) {\r\n        cat.fabrick(Category)\r\n        return cat.catalogHandle(data,id)\r\n      },\r\n      categoryDelet<T>(id:T) {\r\n        cat.fabrick(Category)\r\n        return cat.CatalogDelet(id)\r\n      },\r\n\r\n      Product(id: string) {\r\n        cat.fabrick(Product)\r\n        return cat.getItem<string>(id)\r\n      },\r\n      productlist(data: any) {\r\n        cat.fabrick(Product)\r\n        return cat.getList<TinitialStateProd>(data)\r\n      },\r\n      ProductCategoryList(data: any) {\r\n        console.log(data)\r\n        return request({\r\n          method: 'post',\r\n          url: '/catalog/product/categoryList',\r\n          data:data\r\n        })\r\n      },\r\n      ProdHandle<T, K>(data: T, id?: K) {\r\n        cat.fabrick(Product)\r\n        return cat.catalogHandle(data,id)\r\n      },\r\n      producDelet<T>(id:T) {\r\n        return request({\r\n          method: 'delete',\r\n          url: '/catalog/product/delet/' + id,\r\n        })\r\n      },\r\n      \r\n\r\n\r\n    }\r\n }\r\n\r\n export default getApi(Api.getInstance)","import jwt_decode from \"jwt-decode\";\r\nimport Api from \"./Api\";\r\n\r\nexport const checkUser = async () => {\r\n  let token: any = localStorage.getItem('token');\r\n  if (token) {\r\n    try {\r\n      const { data } = await Api.auth(token)\r\n      return !data.error ? true : false\r\n    } catch (error) {\r\n      console.log(error)\r\n      return false\r\n    }\r\n  }\r\n  return false\r\n}","import { CircularProgress, Grid } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\nconst Loader: React.FC = (): JSX.Element => {\r\n  \r\n  return (\r\n    <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n      <CircularProgress />\r\n    </Grid>\r\n    \r\n  )\r\n}\r\n\r\nexport default Loader","import {makeAutoObservable} from \"mobx\";\r\n\r\ninterface IUserStore {\r\n  setIsAuth:(bool:boolean) => void\r\n}\r\n\r\n class UserStore implements IUserStore{\r\n  public _isAuth: boolean\r\n  public _user:object\r\n    constructor() {\r\n        this._isAuth = false\r\n        this._user = {}\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n  setIsAuth(bool: boolean) {\r\n    this._isAuth = bool\r\n    \r\n    \r\n  }\r\n    setUser(user:object) {\r\n        this._user = user\r\n    }\r\n\r\n    get isAuth() {\r\n        return this._isAuth\r\n    }\r\n    get user() {\r\n        return this._user\r\n    }\r\n}\r\nexport default new UserStore()","import { makeStyles } from '@material-ui/core/styles';\r\nconst drawerWidth = 240;\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n  },\r\n  userTitle: {\r\n    marginRight: 15,\r\n    marginLeft:15,\r\n    fontSize:14\r\n},\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9),\r\n      },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n      height: 'auto',\r\n  },\r\n    formControl: {\r\n      margin: theme.spacing(2),\r\n      minWidth: 180,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n  },\r\n  setingButt: {\r\n      frontSize:'14px'\r\n  },\r\n  toolbars: {\r\n    padding:'0 20px',\r\n    backgroundColor: '#cac9c93b',\r\n    marginBottom:20,\r\n    boxShadow:'0 0 5px rgba(0,0,0,.2)'\r\n  },\r\n  prodHandbutt: {\r\n    fontSize:8\r\n  },\r\n  prodTitle: {\r\n    fontSize:16\r\n  },\r\n  handleboxe: {\r\n    backgroundColor: '#cac9c93b',\r\n    \r\n  },\r\n  prodImgbox: {\r\n    width:26\r\n  },\r\n  prodAddbutt: {\r\n    margin:'0 0 10px 25px'\r\n  }\r\n  }));","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Api from '../../api/Api';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport UserStore from './../../store/UserStore';\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\n\r\ntype Inputs = {\r\n  email: string,\r\n  password: string,\r\n};\r\ntype IRequestLogin = {\r\n  token: string,\r\n  user: object,\r\n  error:boolean\r\n}\r\n\r\nconst Login: React.FC = (): JSX.Element => {\r\n  const [errorse, setErore] = useState<null | string>(null)  \r\n  const { register, handleSubmit, watch, errors } = useForm<Inputs>();\r\n  \r\n  const history = useHistory();\r\n  const onSubmit = async ({email,password}: Inputs) => {\r\n    let aut = window.btoa(email + ':' + password)\r\n    \r\n    Api.login(aut)\r\n      .then(res => {\r\n        localStorage.setItem('token', res.data.token)\r\n        UserStore.setIsAuth(true)\r\n        history.push(\"/catalog\")\r\n        })\r\n        .catch(({ response }) => \r\n            (response.status === 403 && response.data.error) && setErore(response.data.msg))\r\n       \r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid direction=\"row\" item xs={2}>\r\n              <Paper>\r\n                    <form  onSubmit={handleSubmit(onSubmit)}>\r\n                        \r\n                        <div className=\"form-group\">\r\n                              <input\r\n                                  type=\"email\"\r\n                                  name=\"email\"\r\n                                  className=\"form-control input-sm\"\r\n                                  placeholder=\"Email Address\"\r\n                                  ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\r\n                              />\r\n                            </div>\r\n                          <div className=\"form-group\">\r\n                              <input\r\n                                  type=\"password\"\r\n                                  name=\"password\"\r\n                                  className=\"form-control input-sm\"\r\n                                  placeholder=\"Password\"\r\n                                  ref={register({ required: true, minLength: 5, maxLength: 99 })}\r\n                              />\r\n                        </div>\r\n                        \r\n                              \r\n                          <input\r\n                              type=\"submit\"\r\n                              value=\"Login\"\r\n                              className=\"btn btn-info btn-block\"\r\n                              \r\n                          />\r\n                        </form>\r\n                        {\r\n                            errorse && <p>{ errorse }</p>\r\n                        }\r\n                  </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    \r\n  );\r\n}\r\nexport default Login","import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Api from '../../api/Api';\r\n\r\ntype Inputs = {\r\n  name: string,\r\n  email: string,\r\n  password: string,\r\n  confim:string,\r\n  role: string,\r\n  rolepass: string\r\n};\r\n\r\n\r\nconst Register: React.FC = (): JSX.Element => {\r\n  const [errorse, setErore] = useState<null | string>(null)  \r\n  const { register, handleSubmit, watch, errors } = useForm<Inputs>();\r\n\r\n  //const watchName = watch('name');\r\n  const watchRole = watch('role');\r\n  \r\n\r\n  const onSubmit = (data: Inputs) => {\r\n    \r\n    Api.register<Inputs>(data)\r\n        .then(res => console.log(res.data))\r\n        .catch(({ response }) => \r\n            (response.status === 403 && response.data.error) && setErore(response.data.msg))\r\n        \r\n  }\r\n  //console.log('state',errorse);\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <div className=\"row centered-form\">\r\n            <div className=\"col-xs-12 col-sm-8 col-md-4 col-sm-offset-2 col-md-offset-4\">\r\n                <div className=\"panel panel-default\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\">\r\n                            Please sign up! <small>It's free!</small>\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"panel-body\" />\r\n                    <form  onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                className=\"form-control input-sm\"\r\n                                placeholder=\"Full Name\"\r\n                                ref={register({ required: true, minLength: 3, maxLength: 15 })}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                className=\"form-control input-sm\"\r\n                                placeholder=\"Password\"\r\n                                ref={register({ required: true, minLength: 5, maxLength: 99 })}\r\n                            />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"confim\"\r\n                                className=\"form-control input-sm\"\r\n                                placeholder=\"Password\"\r\n                                ref={register({ required: true, minLength: 5, maxLength: 99 })}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                className=\"form-control input-sm\"\r\n                                placeholder=\"Email Address\"\r\n                                ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                              <select name=\"role\" ref={register()}>\r\n                                <option value=\"user\">User</option>\r\n                                <option value=\"admin\">Admin</option>\r\n                              </select>\r\n                          </div>\r\n                            {\r\n                              watchRole === 'admin' &&\r\n                                      <div className=\"form-group\">\r\n                                          <input\r\n                                              type=\"text\"\r\n                                              name=\"rolepass\"\r\n                                              className=\"form-control input-sm\"\r\n                                              placeholder=\"key\"\r\n                                              ref={register({ required: true })}\r\n                                          />\r\n                                        </div>\r\n                \r\n                          }\r\n                          \r\n              \r\n\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Register\"\r\n                            className=\"btn btn-info btn-block\"\r\n                            \r\n                        />\r\n                      </form>\r\n                      {\r\n                          errorse && <p>{ errorse }</p>\r\n                      }\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n  );\r\n}\r\nexport default Register","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Login from '../components/auth/login';\r\nimport Register from '../components/auth/register';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nconst Auth:React.FC<RouteComponentProps> = ({match}) => (\r\n        <Switch>\r\n            <Route path={match.path + '/register'} component={Register} />\r\n            <Route path={match.path + '/login'} component={Login} />\r\n        </Switch>\r\n)\r\n\r\n\r\nexport default Auth","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Iredusers } from '../redux/reducers/rootReducer';\r\n\r\nexport default <T>(selector:any = null) => {\r\n  let state:T | null | undefined\r\n  const udispatch = useDispatch()\r\n  if (selector) {\r\n    state = useSelector(selector)\r\n  }\r\n  \r\n\r\n  const dispatch = useCallback(action => udispatch(action),[udispatch])\r\n\r\n  return {\r\n    dispatch,\r\n    state\r\n  }\r\n}","export default {\r\n  GET_PRODUCT: 'GET_PRODUCT',\r\n  FETCH_START_PRODUCT: 'FETCH_START_PRODUCT',\r\n  FETCH_STOP_PRODUCT:'FETCH_STOP_PRODUCT',\r\n  RESULT_PRODUCT: 'RESULT_PRODUCT',\r\n  SORT_PRODUCT: 'SORT_PRODUCT',\r\n  PAGINATION_PRODUCT_REQUEST: 'PAGINATION_PRODUCT_REQUEST',\r\n  PAGINATION_PRODUCT: 'PAGINATION_PRODUCT',\r\n  SERCH_PRODUCT: 'SERCH_PRODUCT',\r\n  DELET_PRODUCT: 'DELET_PRODUCT',\r\n  CATEGORY_PRODUCT:'CATEGORY_PRODUCT'\r\n}\r\n","import { ActionTypes } from \"./ActionTypeProd\";\r\nimport ActionConst from './constants'\r\n\r\nexport const getProdListRequest = (): ActionTypes.TgetProdListRequest => ({\r\n  type: ActionConst.GET_PRODUCT\r\n})\r\nexport const getProdListResult = (result:[]): ActionTypes.TgetProdListResult => ({\r\n  type: ActionConst.RESULT_PRODUCT,\r\n  payload:result\r\n})\r\n\r\nexport const FetchStartProdLis = () => ({\r\n  type: ActionConst.FETCH_START_PRODUCT,\r\n  payload:true\r\n})\r\nexport const FetchStopProdLis = () => ({\r\n  type: ActionConst.FETCH_STOP_PRODUCT,\r\n  payload:false\r\n})\r\n\r\n\r\n\r\nexport const PaginationProdListRequest = (params: object): ActionTypes.TPaginationProductRequest => ({\r\n  type:ActionConst.PAGINATION_PRODUCT_REQUEST,\r\n  payload:params\r\n})\r\nexport const PaginationProdList = (params: object): ActionTypes.TPaginationProduct => ({\r\n  type:ActionConst.PAGINATION_PRODUCT,\r\n  payload:params\r\n})\r\nexport const SerchProdList = (params: string): ActionTypes.TSerchProduct => ({\r\n  type:ActionConst.SERCH_PRODUCT,\r\n  payload:params\r\n})\r\n\r\nexport const DeletProdList = (params: string): ActionTypes.TDeletProduct => ({\r\n  type:ActionConst.DELET_PRODUCT,\r\n  payload:params\r\n})\r\n\r\nexport const CategoryProdList = (params: string): ActionTypes.TCategoryProduct => ({\r\n  type:ActionConst.CATEGORY_PRODUCT,\r\n  payload:params\r\n})","\r\nimport { Grid } from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport React, { memo } from 'react';\r\nimport { typeSelector } from '../../../@types/CatalogType';\r\nimport useProductStore from '../../../hooks/useProductStore';\r\nimport { PaginationProdListRequest } from '../../../redux/reducers/reducerProduct/action';\r\nimport { Iredusers } from '../../../redux/reducers/rootReducer';\r\n\r\n\r\nconst selector = (state: Iredusers) => state.productHandl.pagination\r\n\r\n\r\nconst Paginations: React.FC = (): JSX.Element => {\r\n  const { dispatch, state } = useProductStore<typeSelector<typeof selector>>(selector)\r\n\r\n  const handlPagi = (event:any, num:number) => {\r\n    if (num !== state?.page) {\r\n      dispatch(PaginationProdListRequest({...state,page:num}))\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div style={{ paddingTop: 20 }}>\r\n      <Grid\r\n        container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n      >\r\n      {\r\n        state && <Pagination onChange={handlPagi} page={state.page} count={state.count} size=\"small\" />\r\n      }\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default memo(Paginations)\r\n","export const popRouteEnv = {\r\n  ADD_CATE: 'add_cate',\r\n  ADD_PRODUCT:'add_product'\r\n}\r\n\r\nexport const RouteEnv = {\r\n  CATALOG_DASHBOARD: '/catalog/dashboard',\r\n  CATALOG_CATAGORY:'/catalog/category'\r\n}","import { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  to?:string | undefined\r\n}\r\n\r\nexport default ({to}:Props = {}) => {\r\n  const location = useLocation();\r\n  const match = useRouteMatch();\r\n  const history:any = useHistory();\r\n  \r\n  \r\n  let pathname\r\n  if (to) {\r\n    pathname = match.url.concat('/', to)\r\n  } else {\r\n    pathname = location.pathname\r\n  }\r\n  \r\n  const back = history.goBack\r\n  \r\n  return {\r\n    pathname,\r\n    back\r\n  };\r\n};","import { Button, TableCell, TableRow, Typography } from '@material-ui/core';\r\nimport React, { memo } from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\n\r\nimport { IProd } from '../../../@types/CatalogType';\r\nimport { popRouteEnv } from '../../../constants/constRouter';\r\nimport usePrepareLink from '../../../hooks/usePrepareLink';\r\nimport useProductStore from '../../../hooks/useProductStore';\r\nimport { DeletProdList } from '../../../redux/reducers/reducerProduct/action';\r\nimport { useStyles } from '../../../styled/material_styles';\r\n\r\ntype TProp = {\r\n  data:any\r\n}\r\n\r\nconst ProductListItems: React.FC<TProp> = ({ data }): JSX.Element => {\r\n  const { dispatch } = useProductStore()\r\n  const classes = useStyles()\r\n  const {pathname} = usePrepareLink({\r\n    to:popRouteEnv.ADD_PRODUCT\r\n  })\r\n\r\n  return (\r\n    <>\r\n       \r\n      {\r\n        \r\n        data.map((val: IProd, index: number) => {\r\n            return (\r\n              <TableRow key={val._id}>\r\n                \r\n                <TableCell className={classes.prodImgbox}>{\r\n                val.img\r\n                  ? <img src={process.env.REACT_APP_API_URL + 'api/static/img/' + val.img} width=\"24\" />\r\n                  : \"\"\r\n                }</TableCell>\r\n                <TableCell>\r\n                  \r\n                  <Typography className={classes.prodTitle} variant=\"h6\" component=\"h6\">\r\n                    {val.title}\r\n                  </Typography>\r\n                  <div className={classes.handleboxe}>\r\n                  <Button className={classes.prodHandbutt} size=\"small\" color=\"primary\"><Link to={pathname + '?id=' + val._id}>ред</Link></Button>\r\n                  <Button className={classes.prodHandbutt} onClick={() => dispatch(DeletProdList(val._id))} color=\"secondary\">Удалить</Button>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>{val.price}</TableCell>\r\n                <TableCell></TableCell>\r\n                <TableCell></TableCell>\r\n                \r\n              </TableRow>\r\n              )\r\n        })\r\n      }\r\n      \r\n      </>\r\n  )\r\n}\r\n\r\nexport default memo(ProductListItems) \r\n","import React, { memo, useEffect} from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport Api from '../../../api/Api';\r\nimport Pagination from '../toolsbar/Pagination';\r\nimport { Iredusers } from '../../../redux/reducers/rootReducer';\r\nimport { createSelector } from 'reselect';\r\nimport useProductStore from '../../../hooks/useProductStore';\r\nimport { getProdListRequest } from '../../../redux/reducers/reducerProduct/action';\r\nimport ProductListItems from './ProductListItems';\r\nimport { typeSelector } from '../../../@types/CatalogType';\r\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\r\nimport Loader from '../../loader';\r\n\r\n\r\nconst ProdData = (state:Iredusers)  => state.productData.data\r\nconst isSpiners = (state: Iredusers) => state.productData.isFetching\r\nconst coutns = (state: Iredusers) => state.productHandl.pagination.count\r\n\r\nconst selectore = createSelector(\r\n  [ProdData,isSpiners,coutns],\r\n  (state, spiner,coutns) => {\r\n    return {data:state,spiner,coutns}\r\n  }\r\n)\r\n\r\nconst ProdList: React.FC = (): JSX.Element => {\r\n  const { dispatch, state } = useProductStore<typeSelector<typeof selectore>>(selectore)\r\n\r\n  useEffect(() => {\r\n    dispatch(getProdListRequest())\r\n    \r\n  }, [])\r\n\r\n  //console.log('prod rend',state);\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        state?.spiner\r\n          ? <Loader />\r\n          :\r\n          <>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Изображение</TableCell>\r\n                <TableCell>Название</TableCell>\r\n                <TableCell>Цена</TableCell>\r\n                <TableCell></TableCell>\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <ProductListItems data={state?.data} />\r\n            </TableBody>\r\n          </Table>  \r\n          {\r\n              (state && state.coutns > 1)  && <Pagination/>\r\n          }\r\n          \r\n          </>\r\n      }\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(ProdList)","import { Button, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport { ICate } from '../../../@types/CatalogType';\r\nimport Api from '../../../api/Api';\r\nimport useProductStore from '../../../hooks/useProductStore';\r\nimport { CategoryProdList } from '../../../redux/reducers/reducerProduct/action';\r\nimport Loader from './../../loader';\r\n\r\n\r\nconst CateList: React.FC = (): JSX.Element => {\r\n  const [cateList, setCateList] = useState<null | Array<ICate>>(null)\r\n  const { dispatch, state } = useProductStore()\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    (async function anyNameFunction() {\r\n      try {\r\n        const {data} = await Api.categorylist()\r\n        setCateList(data)\r\n      } catch (error) {\r\n        \r\n        setCateList(null)\r\n      }\r\n    })();\r\n    \r\n  }, [])\r\n  \r\n  \r\n\r\n  \r\n  return (\r\n    <>\r\n     <List >\r\n    \r\n      {\r\n        !cateList ? <Loader /> :\r\n        cateList.map((val: ICate, index) => {\r\n            return (\r\n             \r\n              <ListItem button\r\n                key={index}\r\n                onClick={() => dispatch(CategoryProdList(val.name))}>\r\n                  \r\n                    <ListItemText primary={val.name} />\r\n                    \r\n              </ListItem>  \r\n           \r\n            )\r\n        })\r\n      }\r\n      \r\n    </List>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(CateList)","import { TextField } from '@material-ui/core';\r\nimport React, { memo } from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { createSelector } from 'reselect';\r\nimport { typeSelector } from '../../../@types/CatalogType';\r\nimport useProductStore from '../../../hooks/useProductStore';\r\nimport { SerchProdList } from '../../../redux/reducers/reducerProduct/action';\r\n\r\nimport { Iredusers } from '../../../redux/reducers/rootReducer';\r\nimport { debounse } from '../../../utils/utilite';\r\n\r\n\r\nconst selectore = createSelector(\r\n  (state:Iredusers) => state.productHandl.serch,\r\n  (serch:string) => serch\r\n)\r\n\r\nconst SerchProd: React.FC = (): JSX.Element => {\r\n  const {dispatch,state} =  useProductStore<typeSelector<typeof selectore>>(selectore)\r\n  \r\n  const handlSerch = (e:any) => {\r\n    const value = e.target.value\r\n    dispatch(SerchProdList(value))\r\n  }\r\n\r\n  //console.log('serch rend',state);\r\n\r\n  \r\n  \r\n  return (\r\n    <div className=\"serch-box\">\r\n      <TextField id=\"standard-basic\" onChange={handlSerch} defaultValue={state as string} label=\"Поиск по каталогу\" />\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(SerchProd) \r\n","export default {\r\n  SORT_PRODUCT:'SORT_PRODUCT',\r\n  PAGINATION_PRODUCT: 'PAGINATION_PRODUCT',\r\n  SERCH_PRODUCT:'SERCH_PRODUCT'\r\n}\r\n","\r\nimport { FormControl, FormHelperText, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport React, { memo, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useProductStore from '../../../hooks/useProductStore';\r\nimport { SortProdList } from '../../../reducers/reducerProduct/action';\r\nimport { Iredusers } from '../../../redux/reducers/rootReducer';\r\nimport { useStyles } from '../../../styled/material_styles';\r\n\r\n\r\n\r\nconst SortProduct: React.FC = (): JSX.Element => {\r\n  const {state, dispatch } = useProductStore((state: Iredusers) => state.productHandl.sort)\r\n  const classes = useStyles()\r\n  \r\n  const toValue = (obj: object) => {\r\n    return JSON.stringify(obj)\r\n  }\r\n\r\n  const handlSection = (e:any) => {\r\n    const target = e.target.value\r\n    const parse = JSON.parse(target)\r\n    dispatch(SortProdList(parse))\r\n  }\r\n  \r\n\r\n  return (\r\n   \r\n    <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Новые</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={JSON.stringify(state)}\r\n          onChange={handlSection}\r\n          className={classes.selectEmpty}\r\n        >\r\n          \r\n          <MenuItem value={toValue({data:-1})}>Новые</MenuItem>\r\n          <MenuItem value={toValue({data:1})}>Старые</MenuItem>\r\n          <MenuItem value={toValue({ title: 1 })}>Алфовиту</MenuItem>\r\n          <MenuItem value={toValue({ price: -1 })}>Цена убывание</MenuItem>\r\n          <MenuItem value={toValue({price:1})}>Цена возростание</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Сортировка товаров</FormHelperText>\r\n      </FormControl>\r\n    \r\n   \r\n  )\r\n}\r\n\r\nexport default memo(SortProduct)","import { ActionTypes } from \"./ActionTypeProd\";\r\nimport ActionConst from './constants'\r\n\r\nexport const SortProdList = (params: object): ActionTypes.TSortProduct => ({\r\n  type:ActionConst.SORT_PRODUCT,\r\n  payload:params\r\n})\r\nexport const PaginationProdList = (params: number): ActionTypes.TPaginationProduct => ({\r\n  type:ActionConst.PAGINATION_PRODUCT,\r\n  payload:params\r\n})\r\nexport const SerchProdList = (params: string): ActionTypes.TSerchProduct => ({\r\n  type:ActionConst.SERCH_PRODUCT,\r\n  payload:params\r\n})","import { Button, Fab, Grid } from '@material-ui/core';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport React, { memo } from 'react';\r\nimport SerchProd from '../../components/catalog/toolsbar/SerchProd';\r\nimport SortProduct from '../../components/catalog/toolsbar/SortProduct';\r\nimport { useStyles } from '../../styled/material_styles';\r\n\r\nconst ToolbarTpl: React.FC = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Grid container\r\n      className={classes.toolbars}\r\n      direction=\"row\"\r\n      justify=\"space-between\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid >\r\n        <SerchProd />\r\n      </Grid>\r\n      <Grid item >\r\n          <Grid container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n          <SortProduct />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            size=\"small\"\r\n            className={classes.setingButt}\r\n            \r\n          >\r\n            <SettingsIcon />\r\n          </Button>\r\n          \r\n          </Grid>\r\n      </Grid>\r\n      \r\n    </Grid>\r\n  )\r\n}\r\nexport default ToolbarTpl ","import { Dialog } from '@material-ui/core';\r\nimport React, { ReactNode, useEffect, useMemo } from 'react';\r\nimport { Route, RouteComponentProps, useHistory, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport { I } from '../../@types/Interface';\r\nimport usePoPUPchild from '../../hooks/usePoPUPchild';\r\nimport usePrepareLink from '../../hooks/usePrepareLink';\r\n\r\ntype TDialogs = {\r\n  to:string\r\n  children: ReactNode,\r\n  setRend?:any\r\n}\r\n\r\n\r\nexport const Dialogs: React.FC<TDialogs> = ({children,to,setRend}): JSX.Element => {\r\n  const { back } = usePrepareLink()\r\n  const childrenWithProps = usePoPUPchild(children)\r\n\r\n  return (\r\n    <>\r\n    <Route path={to}\r\n         render={\r\n           ({ match }) => {\r\n            setRend && setRend(false)\r\n             return (\r\n              <Dialog onClose={back} open={Boolean(match)}>\r\n                {childrenWithProps?.map((val: any) => val)}\r\n              </Dialog>\r\n             )\r\n           }\r\n         }\r\n      />\r\n    </>  \r\n  )\r\n}\r\n","import React, { ReactNode, useMemo} from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\n\r\nexport default (children:ReactNode) => {\r\n  const location: any = useLocation()\r\n  \r\n  return useMemo(() => {\r\n    return React.Children.map(children, (child: any) => {\r\n      const query = new URLSearchParams(location.search)\r\n      let queryProp: object = {}\r\n      \r\n      query.forEach((val,key) => {\r\n        Object.assign(queryProp, {[key]:val})\r\n      })\r\n      \r\n\r\n      if (React.isValidElement(child)) {\r\n        return React.cloneElement<any>(child, queryProp);\r\n      }\r\n      \r\n      \r\n      return child;\r\n    })\r\n  }, [location.search])\r\n  \r\n  \r\n}","import { Alert } from '@material-ui/lab';\r\nimport React, { memo, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { ICate } from '../../../@types/CatalogType';\r\nimport { I } from '../../../@types/Interface';\r\n\r\nimport Api from '../../../api/Api';\r\nimport { debounse } from '../../../utils/utilite';\r\nimport Attributes from './Attributes';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getProdListRequest } from '../../../redux/reducers/reducerProduct/action';\r\n\r\n\r\n\r\ntype Inputs<C> = {\r\n  title: string,\r\n  price: number,\r\n  priceOld: number,\r\n  descript: string\r\n  recomend: Number,\r\n  atributes: [],\r\n  picture: any,\r\n  img: any,\r\n  category: C,\r\n  data:number\r\n}\r\ntype Tmassege = {\r\n  msg: string,\r\n  error:boolean\r\n}\r\n\r\n\r\nconst ProdForm: React.FC<{id?:string}> = ({ id }): JSX.Element => {\r\n  const [stateProd, setProd] = useState<null | Inputs<ICate>>(null)\r\n  const [filee, setfile] = useState<any>(false)\r\n  const [category, setCategory] = useState<null | ICate[]>(null)\r\n  const [massege, setMassege] = useState<null | Tmassege>(null)\r\n  const dispatch = useDispatch()\r\n\r\n  const { register, handleSubmit} = useForm<Inputs<string> >();\r\n  \r\n  useEffect(() => {\r\n    id && (async function anyNameFunction() {\r\n      try {\r\n        const { data } = await Api.Product(id)\r\n        setProd(data)\r\n      } catch (error) {\r\n        \r\n        setProd(null)\r\n      }\r\n      \r\n    })();\r\n    \r\n  },[id]) \r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const { data } = await Api.categorylist<ICate>()\r\n        setCategory(data)\r\n      } catch (error) {\r\n        console.log(error);\r\n        setCategory(null)\r\n      }\r\n    })()\r\n    \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let timer: any\r\n    if (massege) {\r\n      timer = setTimeout(()=> setMassege(null),10000)\r\n    }\r\n    return () => clearTimeout(timer)\r\n  },[massege])\r\n  \r\n  const onSubmit: (data: Inputs<string>) => void = async (data: Inputs<string>) => {\r\n    setMassege(null)\r\n    try {\r\n      //const file = data.picture[0].name\r\n      const formData = new FormData()\r\n      formData.append('title', String(data.title))\r\n      formData.append('price', String(data.price))\r\n      formData.append('priceOld', String(data.priceOld))\r\n      formData.append('descript', String(data.descript))\r\n      formData.append('recomend', String(data.recomend))\r\n      formData.append('category', String(data.category))\r\n      formData.append('data', String(Date.now()))\r\n      if (filee || stateProd?.img) {\r\n        formData.append('img', filee || stateProd?.img)\r\n      }\r\n      \r\n      await Api.ProdHandle(formData, id)\r\n      dispatch(getProdListRequest())\r\n      setMassege({\r\n        msg: id ? 'Товар успешно изменен' : 'Товар успешно добавлен',\r\n        error:false\r\n      })\r\n    } catch (error) {\r\n      setMassege({\r\n        msg: 'Возникла ошибка',\r\n        error:true\r\n      })\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        massege && (massege.error\r\n          ? <Alert severity=\"error\">{massege.msg}</Alert>\r\n          : <Alert severity=\"success\">{massege?.msg}</Alert>)\r\n      }\r\n        \r\n        <form className=\"popBox prodpopBox\" onSubmit={handleSubmit(onSubmit)} encType=\"multipart/form-data\">\r\n            \r\n              <div className=\"popBox_item\">\r\n                <label className=\"form-label\">Название</label>\r\n                <input type=\"text\" name=\"title\"\r\n                  ref={register({ required: true, minLength: 2, maxLength: 15 })}\r\n                  defaultValue={stateProd ? String(stateProd.title) : ''}\r\n                  className=\"form-control\" />\r\n              </div>\r\n              <div className=\"popBox_item\"> \r\n                <label className=\"form-label\">Цена</label>\r\n                <input type=\"text\" name=\"price\"\r\n                  ref={register}\r\n                  defaultValue={stateProd ? String(stateProd.price) : \" \"}\r\n                  className=\"form-control\" />\r\n              </div>\r\n              <div className=\"popBox_item\">\r\n                <label className=\"form-label\">Скидка</label>\r\n                <input type=\"text\" name=\"priceOld\"\r\n                  ref={register}\r\n                  defaultValue={stateProd ? String(stateProd.priceOld) : \" \"}\r\n                  className=\"form-control\" />\r\n              </div>\r\n              <div className=\"popBox_item\">\r\n                <label className=\"form-label\">рекомендации</label>\r\n                <input type=\"text\" name=\"recomend\"\r\n                  ref={register}\r\n                  defaultValue={stateProd ? String(stateProd.recomend) : \" \"}\r\n                  className=\"form-control\" />\r\n              </div>  \r\n              <div className=\"popBox_item\">\r\n                <label className=\"form-label\">Картинка</label>\r\n                <input type=\"file\" onChange={(e:any) => setfile(e.target.files[0])} />\r\n              </div>\r\n              \r\n              <div className=\"popBox_item\">\r\n                <label className=\"form-label\">Описание</label>\r\n                <textarea name=\"descript\" ref={register}></textarea>\r\n              </div>\r\n              <div className=\"popBox_item\">\r\n                <label className=\"form-label\">Категории</label>\r\n                <select name=\"category\" ref={register}>\r\n                  {\r\n                    category && category.map((val:ICate,index) => {\r\n                      return (\r\n                        <option\r\n                          selected={\r\n                            stateProd && stateProd.category._id == val._id ? true : false\r\n                          }\r\n                          key={val._id}\r\n                          defaultValue={'ww'}\r\n                          value={val._id} >\r\n                            {val.name}\r\n                        </option>\r\n                      )\r\n                    })\r\n                  }\r\n                  \r\n                </select>\r\n              </div>\r\n   \r\n              \r\n          \r\n            <div className=\"popBox_item\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </div>\r\n          </form>\r\n       </>\r\n  )\r\n}\r\n\r\nexport default ProdForm","import React, { memo } from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport ProdList from '../../components/catalog/product/ProdList';\r\nimport { Button, Container, Grid, Paper, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport { useStyles } from '../../styled/material_styles';\r\nimport CateProdList from '../../components/catalog/category/CateProdList';\r\nimport ToolbarTpl from './ToolbarTpl';\r\nimport { Dialogs } from '../../components/modals/Dialogs';\r\nimport usePrepareLink from '../../hooks/usePrepareLink';\r\nimport { popRouteEnv } from '../../constants/constRouter';\r\nimport { Link } from 'react-router-dom';\r\nimport ProdForm from '../../components/catalog/product/ProdForm';\r\n\r\nconst CatMain: React.FC<RouteComponentProps> = ({ match }) => {\r\n  const classes = useStyles()\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const {pathname} = usePrepareLink({\r\n    to:popRouteEnv.ADD_PRODUCT\r\n  })\r\n  \r\n  \r\n  return(\r\n    \r\n    <Container maxWidth=\"lg\" className={classes.container}>\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} md={4} lg={3}>\r\n        <Paper className={fixedHeightPaper}>\r\n          <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n          Категории\r\n        </Typography>\r\n          <CateProdList />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} md={8} lg={9}>\r\n          <Paper className={fixedHeightPaper}>\r\n          <Grid\r\n              container\r\n             \r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n            >\r\n              <Typography component=\"h2\" variant=\"h4\" color=\"primary\" gutterBottom>Товары</Typography>\r\n              <Button className={classes.prodAddbutt} variant=\"contained\" color=\"primary\">\r\n                <Link to={pathname} >Добавить товар</Link>\r\n              </Button>\r\n\r\n          </Grid>\r\n          <Dialogs to={pathname}>\r\n               <ProdForm />\r\n               \r\n            </Dialogs>  \r\n          <ToolbarTpl />  \r\n          <ProdList />\r\n        </Paper>\r\n      </Grid>\r\n      \r\n    </Grid>\r\n    </Container>\r\n  )\r\n}  \r\nexport default CatMain","import { Button, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport React, { memo, useCallback, useEffect, useState } from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { ICate } from '../../../@types/CatalogType';\r\nimport Api from '../../../api/Api';\r\nimport { popRouteEnv } from '../../../constants/constRouter';\r\nimport usePrepareLink from '../../../hooks/usePrepareLink';\r\nimport Loader from './../../loader';\r\n\r\n\r\nconst CateList: React.FC<{rend:boolean}> = ({rend}): JSX.Element => {\r\n  const [state, setstate] = useState<null | Array<ICate>>(null)\r\n  const [cat,setCat] = useState('')\r\n  const {pathname} = usePrepareLink({\r\n    to:popRouteEnv.ADD_CATE\r\n  })\r\n\r\n  const reqCategory = async () => {\r\n    try {\r\n      const {data} = await Api.categorylist()\r\n      setstate(data)\r\n    } catch (error) {\r\n      setstate(null)\r\n    }\r\n  } \r\n\r\n  useEffect(() => {\r\n    reqCategory()\r\n  },[rend])\r\n\r\n  const deletHadle = useCallback(async (id: string) => {\r\n    try {\r\n      await Api.categoryDelet(id)\r\n      await reqCategory()\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },[])\r\n\r\n  \r\n\r\n  \r\n  return (\r\n    <>\r\n     <List >\r\n    \r\n      {\r\n        !state ? <Loader /> :\r\n          state.map((val: ICate, index) => {\r\n            return (\r\n             \r\n              <ListItem\r\n                key={index}\r\n                onClick={() => setCat(val._id)}>\r\n                  \r\n                    <ListItemText primary={val.name} />\r\n                    <Button color=\"primary\">\r\n                      <Link className=\"badge bg-secondary\" to={pathname + '?id=' + val._id}>ред</Link>\r\n                    </Button>\r\n                    <ListItemIcon>\r\n                        <DeleteIcon onClick={()=> deletHadle(val._id)} />\r\n                    </ListItemIcon>\r\n              </ListItem>  \r\n           \r\n            )\r\n        })\r\n      }\r\n      \r\n    </List>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(CateList)","import './style.css'\r\nimport React, { ReactNode, useCallback, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { ICate } from '../../../@types/CatalogType';\r\nimport { I } from '../../../@types/Interface';\r\n\r\nimport Api from '../../../api/Api';\r\n\r\ninterface Inputs{\r\n  name:String\r\n}\r\ninterface IProps{\r\n  id?: string,\r\n  setRend:any\r\n}\r\n\r\nconst CateForm: React.FC<IProps> = ({id,setRend}): JSX.Element => {\r\n  const [stateCate, setCate] = useState<null | ICate>(null)\r\n  const { register, handleSubmit, watch, errors } = useForm<Inputs>();\r\n  \r\n  \r\n  useEffect(() => {\r\n    id && (async function anyNameFunction() {\r\n      try {\r\n        const { data } = await Api.categorylist<typeof id>(id)\r\n        setCate(data)\r\n      } catch (error) {\r\n        \r\n        setCate(null)\r\n      }\r\n    })();\r\n  }, [id])\r\n\r\n  const onSubmit = useCallback(async (data: Inputs) => {\r\n    try {\r\n      await Api.categoryHandle<Inputs, typeof id>(data, id)\r\n      setRend(true)\r\n    } catch (error) {\r\n      setCate(null)\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    \r\n    <form className=\"popBox\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"popBox_item\">\r\n        <label className=\"form-label\">Название</label>\r\n        <input type=\"text\" name=\"name\"\r\n          ref={register({ required: true, minLength: 2, maxLength: 15 })}\r\n          placeholder={stateCate?.name as string}\r\n          className=\"form-control\" />\r\n            \r\n      </div>\r\n          \r\n      <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n       \r\n  )\r\n}\r\n\r\nexport default CateForm","import React, { useState } from 'react';\r\nimport { Route, Link, useHistory } from \"react-router-dom\";\r\nimport { Button, Container, Grid, Paper, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport { useStyles } from '../../styled/material_styles';\r\nimport CateList from '../../components/catalog/category/CateList';\r\nimport CateForm from '../../components/catalog/category/CateForm';\r\nimport { I } from '../../@types/Interface';\r\nimport { Dialogs } from '../../components/modals/Dialogs';\r\nimport usePrepareLink from '../../hooks/usePrepareLink';\r\nimport { popRouteEnv } from '../../constants/constRouter';\r\n\r\nconst CategoryTpl: React.FC<I.Irote> = ({ history, match }) => {\r\n  const [render, setRender] = useState(false)\r\n  const classes = useStyles()\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const {pathname} = usePrepareLink({\r\n    to:popRouteEnv.ADD_CATE\r\n  })\r\n\r\n   return (\r\n    <Container maxWidth=\"lg\" className={classes.container}>\r\n       <Grid container spacing={3}>\r\n       \r\n         <Grid item xs={12} md={6} lg={6}>\r\n\r\n        \r\n           <Paper className={fixedHeightPaper}>\r\n              <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n            Категории\r\n          </Typography>\r\n         <Button variant=\"contained\" color=\"primary\"><Link to={pathname} >Добавить категорию</Link></Button>\r\n             <Dialogs setRend={setRender} to={pathname}>\r\n               <CateForm setRend={setRender} />\r\n               \r\n            </Dialogs>\r\n            <CateList rend={render} />\r\n        </Paper>\r\n      </Grid>\r\n      \r\n      \r\n       </Grid>\r\n       \r\n    </Container>\r\n  )\r\n}\r\nexport default CategoryTpl","import React from 'react';\r\nimport { Route, Switch, Redirect, useRouteMatch } from 'react-router-dom';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport Main from '../views/catalog/main'\r\nimport CateForm from '../components/catalog/category/CateForm';\r\nimport ProdForm from './../components/catalog/product/ProdForm';\r\nimport CategoryTpl from '../views/catalog/CategoryTpl';\r\nimport { RouteEnv } from '../constants/constRouter';\r\n\r\nconst Catalog: React.FC = () => {\r\n    //const { path } = useRouteMatch()\r\n    console.log('catalog')\r\n    return (\r\n        <>\r\n            <Route path={RouteEnv.CATALOG_DASHBOARD} component={Main} />\r\n            <Route path={RouteEnv.CATALOG_CATAGORY} component={CategoryTpl} />\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Catalog","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React,{ useEffect,useState } from 'react';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport UserStore from './../store/UserStore';\r\n//\r\nimport { AppBar, Avatar, Badge, Box, Container, CssBaseline, Divider, Drawer, Grid, IconButton, Link, List, ListItem, ListItemIcon, ListItemText, Paper, Toolbar, Typography } from '@material-ui/core';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport clsx from 'clsx';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useStyles } from '../styled/material_styles';\r\n\r\ntype Iuser = {\r\n  email:string\r\n}\r\n\r\nconst Header: React.FC = () => {\r\n  const [user, setUser] = useState<string>('')\r\n  const history = useHistory();\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    if (UserStore._isAuth) {\r\n      let token: string | null = localStorage.getItem('token');\r\n      if (token) {\r\n        const user: Iuser = jwt_decode(token)\r\n        setUser(user.email)\r\n      }\r\n    }\r\n    \r\n  }, [UserStore._isAuth])\r\n  \r\n  const logOut = () => {\r\n    localStorage.removeItem('token')\r\n    UserStore.setIsAuth(false)\r\n    history.push(\"/auth/login\")\r\n    \r\n  }\r\n\r\n  return (\r\n    <AppBar position=\"absolute\" className={clsx(classes.appBar, classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            \r\n            className={clsx(classes.menuButton, classes.menuButtonHidden)}\r\n          >\r\n            \r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          \r\n          <Avatar src=\"/broken-image.jpg\" />\r\n          \r\n          <Typography className={classes.userTitle} color=\"inherit\" noWrap>\r\n            Добро пожаловать, {user}\r\n        </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <ExitToAppIcon onClick={logOut} />\r\n          </IconButton>\r\n        </Toolbar>\r\n                </AppBar>\r\n    \r\n    \r\n    )\r\n}  \r\nexport default Header","import React, { useEffect, useState } from 'react';\r\nimport { AppBar, Badge, Box, Container, CssBaseline, Divider, Drawer, Grid, IconButton, List, ListItem, ListItemIcon, ListItemText, Paper, Toolbar, Typography } from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\n\r\nimport { useStyles } from '../styled/material_styles';\r\nimport clsx from 'clsx';\r\nimport { RouteEnv } from '../constants/constRouter';\r\n\r\nconst Drawers: React.FC = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    \r\n    <Drawer\r\n    variant=\"permanent\"\r\n    classes={{\r\n      paper: clsx(classes.drawerPaper),\r\n    }}\r\n  >\r\n    <div className={classes.toolbarIcon}>\r\n      <IconButton >\r\n        <ChevronLeftIcon />\r\n      </IconButton>\r\n    </div>\r\n    <Divider />\r\n      <List>\r\n        <Link  to={RouteEnv.CATALOG_DASHBOARD}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n                <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link  to={RouteEnv.CATALOG_CATAGORY}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n                <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Категории\" />\r\n          </ListItem>\r\n        </Link>\r\n    </List>\r\n    <Divider />\r\n    </Drawer>\r\n  )\r\n}\r\nexport default Drawers","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Router from '../routes/Router';\r\nimport Header from './header';\r\nimport UserStore from '../store/UserStore';\r\nimport Drawers from './Drawers';\r\nimport { Container } from '@material-ui/core';\r\nimport { useStyles } from '../styled/material_styles';\r\n\r\n\r\nconst Dashboard: React.FC = ({ children }): JSX.Element => {\r\n    const classes = useStyles()\r\n    \r\n    return (\r\n    <>\r\n        {\r\n            UserStore._isAuth &&\r\n            <>\r\n                <Header />\r\n                <Drawers />\r\n                <main className={classes.content}>\r\n                    <div className={classes.appBarSpacer} />\r\n                    {children}\r\n                </main>\r\n                          \r\n            </>    \r\n        }\r\n        \r\n       \r\n        \r\n    </>\r\n       \r\n)} \r\nexport default Dashboard","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Header from '../components/header';\r\nimport Auth from './Auth';\r\nimport Catalog from './Catalog';\r\nimport Dashboard from '../components/Dashboard';\r\n\r\n\r\n\r\n\r\nconst Router:React.FC = () => (\r\n        <Switch>\r\n            <Route path=\"/auth\" component={Auth} />\r\n            <Route path=\"/catalog\">\r\n                <Dashboard>\r\n                    <Catalog />\r\n                </Dashboard>\r\n            </Route>\r\n        </Switch>\r\n)\r\n\r\nexport default Router","import React, { useEffect, useState } from 'react'; \r\nimport Main from '../components/Dashboard';\r\nimport { checkUser } from '../api/Api_user';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Loader from '../components/loader';\r\nimport {observer} from \"mobx-react\";\r\nimport UserStore from '../store/UserStore';\r\n\r\nimport { AppBar, Badge, Box, Container, CssBaseline, Divider, Drawer, Grid, IconButton, Link, List, ListItem, ListItemIcon, ListItemText, Paper, Toolbar, Typography } from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport clsx from 'clsx';\r\nimport { useStyles } from '../styled/material_styles';\r\nimport { Copyright } from '@material-ui/icons';\r\nimport Router from '../routes/Router';\r\nimport { RouteEnv } from '../constants/constRouter';\r\nimport Api from '../api/Api';\r\n\r\n\r\n\r\n  \r\n\r\n\r\nconst App: React.FC = () => {\r\n    const [loading, setLoading] = useState(true)\r\n    const history = useHistory();\r\n    const classes = useStyles()\r\n\r\n    Api.categorylist().then(val => console.log(val))\r\n\r\n    useEffect(() => {\r\n        checkUser()\r\n            .then(e => {\r\n                if (e) {\r\n                    UserStore.setIsAuth(e)\r\n                    history.push(RouteEnv.CATALOG_DASHBOARD)\r\n                } else {\r\n                    UserStore.setIsAuth(e)\r\n                    history.push(\"/auth/login\")\r\n                }\r\n            })\r\n            .finally(() => setLoading(false))\r\n    }, [UserStore._isAuth])\r\n    \r\n    \r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n            <CssBaseline />\r\n            { \r\n                loading\r\n                  ? <Loader />\r\n                  : <Router />\r\n                    \r\n            }\r\n            </div>\r\n          \r\n            \r\n        \r\n        </>    \r\n    )\r\n}\r\n\r\nexport {App}\r\nexport default observer(App);\r\n","import ActionConst from \"./constants\"\r\n\r\ntype TAction = {\r\n  type:string,\r\n  payload?:any\r\n}\r\n\r\n\r\n// -init state\r\n\r\n// state handle prod list\r\nexport const initialStateProd = {\r\n  sort: {\r\n    data: -1\r\n  },\r\n  pagination: {\r\n    page: 1,\r\n    limit: 3,\r\n    count:0\r\n  },\r\n  serch: '',\r\n  category:''\r\n\r\n}\r\nexport type TinitialStateProd = typeof initialStateProd\r\n\r\nconst reducerProd = (state:TinitialStateProd = initialStateProd, action:TAction):TinitialStateProd => { \r\n  const setSate = SetState(state)\r\n  \r\n\r\n  switch (action.type) {\r\n   \r\n    \r\n    case ActionConst.SORT_PRODUCT:\r\n      return setSate('sort', action.payload)\r\n      break;\r\n\r\n    case ActionConst.PAGINATION_PRODUCT:\r\n      return setSate('pagination', action.payload)\r\n      break;\r\n    case ActionConst.SERCH_PRODUCT:\r\n      let pagination = Object.assign(state.pagination, { page: 1 })\r\n      return {\r\n        ...state,\r\n        pagination:{...pagination},\r\n        serch: action.payload\r\n      }\r\n    case ActionConst.CATEGORY_PRODUCT:\r\n      return setSate('category', action.payload)\r\n      break;\r\n      default: return state\r\n  }\r\n}\r\n\r\n\r\n// state prod list\r\nexport const initialStateProdListData = {\r\n  data: [],\r\n  isFetching: true,\r\n}\r\nexport type TinitialStateProdListData = typeof initialStateProdListData\r\n\r\nconst reducerProdListData = (state:TinitialStateProdListData = initialStateProdListData, action:TAction):TinitialStateProdListData => { \r\n  const setSate = SetState(state)\r\n  \r\n\r\n  switch (action.type) {\r\n    case ActionConst.RESULT_PRODUCT:\r\n      return setSate('data', action.payload)\r\n      break;\r\n    case ActionConst.FETCH_START_PRODUCT:\r\n      return setSate('isFetching', action.payload)\r\n      break\r\n    case ActionConst.FETCH_STOP_PRODUCT:\r\n        return setSate('isFetching', action.payload)\r\n      break\r\n    default: return state\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst SetState = <T>(state:T) => (key:string,data:any) =>{\r\n  return {...state,[key]: data}\r\n}\r\n\r\nexport {reducerProd,reducerProdListData}","\r\nexport const ActionConstErrors = {\r\n  PRODUCTLIST_ERROR:'PRODUCTLIST_ERROR'\r\n} \r\nexport const ProdListError = <T>(error: T,meta:string | null = null)  => ({\r\n  type: ActionConstErrors.PRODUCTLIST_ERROR,\r\n  error: true,\r\n  payload: error,\r\n  meta\r\n})","import { ActionConstErrors } from \"./action\"\r\n\r\nexport const initialStateErrors = {\r\n  productlist: {\r\n    error: false,\r\n    msg:''\r\n  }\r\n}\r\n\r\nexport type  TinitialStateErrors = typeof initialStateErrors\r\n\r\ntype TAction = {\r\n  type:string,\r\n  payload?:any\r\n}\r\n\r\nconst reducerErrors = (state:TinitialStateErrors = initialStateErrors, action:TAction):TinitialStateErrors => { \r\n  const setSate = SetState(state)\r\n  \r\n\r\n  switch (action.type) {\r\n    case ActionConstErrors.PRODUCTLIST_ERROR:\r\n      return setSate('productlist', action.payload)\r\n    break\r\n      default: return state\r\n  }\r\n}\r\nconst SetState = (state:TinitialStateErrors) => (key:string,data:any) =>{\r\n  return {...state,[key]: data}\r\n}\r\n\r\n\r\nexport {reducerErrors}","import { combineReducers } from \"redux\";\r\nimport { reducerProd, reducerProdListData, TinitialStateProd, TinitialStateProdListData } from './reducerProduct/reducer'\r\nimport { reducerErrors, TinitialStateErrors } from './reducerErrors/reducer';\r\n\r\nexport interface Iredusers {\r\n    productHandl: TinitialStateProd,\r\n    productData:TinitialStateProdListData,\r\n    errors: TinitialStateErrors\r\n}\r\n\r\nexport default combineReducers({\r\n    productHandl: reducerProd,\r\n    productData:reducerProdListData,\r\n    errors: reducerErrors\r\n})","export const debounse = () => {\r\n  let timer:any\r\n  return (fn:any,time:number): void => {\r\n    clearTimeout(timer)\r\n    timer = setTimeout(() => {\r\n      fn()\r\n    },time)\r\n  }\r\n}\r\n\r\nexport const stateMutait = <T, K extends keyof T,D extends T[K]>(state:T,key:K,data:D): T => {\r\n  return { ...state, [key]: data }\r\n}","import { call, select} from \"redux-saga/effects\";\r\nimport { Toptione } from \"../../../@types/CatalogType\";\r\nimport Api from \"../../../api/Api\";\r\nimport { stateMutait } from \"../../../utils/utilite\";\r\n\r\nimport { ProdListFetch } from \"./sagaProd\";\r\n\r\nexport function* selects() {\r\n  return yield select(state => state.productHandl)\r\n}\r\n// общая праклатка для хенделов\r\nfunction* ProdListHandlSaga<K extends string,T>(key:K,payload:T,optione?:Toptione) {\r\n  const selectState = stateMutait(yield call(selects), key, payload)\r\n  const option = {\r\n    fetcher: optione ? optione.api : Api.productlist,\r\n    fetcherBody: selectState,\r\n  }\r\n  yield ProdListFetch(option)\r\n  \r\n}\r\n\r\n// сортировка\r\nexport function* ProdListSortSaga({ payload }: any) {\r\n  yield ProdListHandlSaga('sort',payload)\r\n}\r\n// поиск\r\nexport function* ProdListSerchSaga({ payload }: any) {\r\n  yield ProdListHandlSaga('serch',payload)\r\n}\r\n// пагинация\r\nexport function* ProdListPaginationSaga({ payload }: any) {\r\n  yield ProdListHandlSaga('pagination',payload)\r\n}\r\n//категории\r\nexport function* ProdListCategorySaga({ payload }: any) {\r\n  \r\n  const optione:Toptione = {\r\n    api:Api.ProductCategoryList\r\n  }\r\n  yield ProdListHandlSaga('category',payload,optione )\r\n}\r\n","import { put, call, takeEvery, select, take, takeLatest, delay, fork} from \"redux-saga/effects\";\r\nimport Api from \"../../../api/Api\";\r\nimport { stateMutait } from \"../../../utils/utilite\";\r\nimport { ProdListError } from \"../reducerErrors/action\";\r\nimport { FetchStartProdLis, FetchStopProdLis, getProdListResult, PaginationProdList } from \"./action\";\r\nimport ActionConst from './constants'\r\nimport { ProdListCategorySaga, ProdListPaginationSaga, ProdListSerchSaga, ProdListSortSaga, selects } from \"./sagaHandlProd\";\r\n\r\nexport function* ProdListFetch(option: any) {\r\n  try {\r\n    yield put(FetchStartProdLis())\r\n    const { data: { data, pagination } } = yield call(option.fetcher, option.fetcherBody)\r\n    /*\r\n    const request = option.selectState\r\n      ? Object.assign(option.selectState, data)\r\n      : data\r\n    */\r\n    //console.log(data,pagination)\r\n    yield put(PaginationProdList(pagination)) \r\n    yield put(getProdListResult(data))\r\n\r\n  } catch (error) {\r\n    yield put(ProdListError<typeof error>(error,'Что-то пошло не так'))\r\n  }\r\n  finally {\r\n    yield put(FetchStopProdLis())\r\n  }\r\n}\r\n\r\n\r\n// первоначальны запрос с деф стейтом\r\nfunction* ProdListRequestSaga() {\r\n  const selectState = yield call(selects)\r\n  const option = {\r\n    fetcher:Api.productlist,\r\n    fetcherBody: selectState,\r\n  }\r\n  yield ProdListFetch(option)\r\n}\r\n\r\n// удаление \r\nfunction* ProdListDeletSaga({ payload }: any) {\r\n  try {\r\n    yield fork(Api.producDelet, payload)\r\n    yield delay(500)\r\n    yield ProdListRequestSaga()\r\n  } catch (error) {\r\n    yield put(ProdListError<typeof error>(error,'Что-то пошло не так'))\r\n  }  \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction* watchProdListRequestSaga() {\r\n  yield takeEvery(ActionConst.GET_PRODUCT, ProdListRequestSaga)\r\n  yield takeLatest(ActionConst.DELET_PRODUCT, ProdListDeletSaga)\r\n}\r\nfunction* watchProdListRequestHandlSaga() {\r\n  yield takeEvery(ActionConst.SORT_PRODUCT, ProdListSortSaga)\r\n  yield takeEvery(ActionConst.PAGINATION_PRODUCT_REQUEST, ProdListPaginationSaga)\r\n  yield takeLatest(ActionConst.SERCH_PRODUCT, ProdListSerchSaga)\r\n  yield takeEvery(ActionConst.CATEGORY_PRODUCT, ProdListCategorySaga)\r\n}\r\n\r\n\r\nexport {\r\n  watchProdListRequestSaga,\r\n  watchProdListRequestHandlSaga\r\n}","import { all } from \"redux-saga/effects\";\r\nimport { watchProdListRequestHandlSaga, watchProdListRequestSaga } from \"../reducers/reducerProduct/sagaProd\";\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchProdListRequestSaga(),\r\n        watchProdListRequestHandlSaga()\r\n    ])\r\n    \r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport rootSaga from \"./sagas/sagas\";\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App/App';\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport store from './redux/store';\r\nimport './main.css'\r\n\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n), document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}