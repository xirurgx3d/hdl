
version: "2.0"

services:
    proxy:
        image: docker/proxy
        build: ./proxy
        container_name: proxy
        volumes:
            - ./proxy/nginx:/etc/nginx/conf.d
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
            
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - web-public
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"    
        networks:
            - mynetwork
    admin:
        image: docker/frontend
        build: ./frontend
        container_name: admin
        ports:
            - 88:88
        volumes:
            - ./frontend/build:/usr/share/nginx/html
        links:
            - api    
        networks:
            - mynetwork   
    api:
        image: docker/backend
        build: ./backend
        container_name: api 
        environment: 
            - PORT=4000
        networks:
            - mynetwork      
    web-public:
        image: docker/client
        build: ./client
        container_name: web-public
        volumes:
            - ./client:/usr/src/app
        ports:
            - 3000:3000
        networks:
            - mynetwork    
    certbot:
      image: certbot/certbot
      restart: unless-stopped
      volumes:
        - ./certbot/conf:/etc/letsencrypt
        - ./certbot/www:/var/www/certbot
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"                          
networks:
  mynetwork:
    external:
      name: myglobalnetwork